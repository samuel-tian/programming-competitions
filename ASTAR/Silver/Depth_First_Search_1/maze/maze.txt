In a given maze, your goal is to find a path from 'S' to 'F'. You 
can move only up, down, left and right directions. The path cannot 
pass through a position that is visited before.

You need to write a function/method that returns the path as a 
string.

For C++ users, the function is defined as follows:

string solve();

For Java users, the method is defined as follows:

String solve();

You can use additional functions/methods if you need.

PROBLEM NAME: maze

INPUT FORMAT:

* Line 1: Has two integers; the rows 3 <= N <= 100, and the 
columns 3 <= M <= 100 of the maze.

* Line 2..N+1: The maze composed of '#' and '.'. '#' means a wall 
where as '.' is empty spot. 'S' indicates the starting position 
and 'F' is the ending position.

SAMPLE INPUT:

5 7
#######
#F#...#
#.#.#.#
#...#S#
#######

OUTPUT FORMAT:

There is no output on screen but your function/method solve()
must return the path from 'S' to 'F' as a string. The path is 
composed of characters 'U' (up), 'D' (down), 'L' (left), 'R' 
(right). 

SAMPLE OUTPUT:

Nothing on screen but the returned path should be "UULLDDLLUU"
for this example.